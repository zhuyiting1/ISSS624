---
title: "Hands-on_Ex2"
editor: visual
---

## Overview

This is my second hands-on exercise for geospatial analytics! I will apply what I learnt on global and local indicators of spatial association from my second geospatial lecture on the Hunan dataset from my earlier in-class exercise.

## Data

Unzip **Hands-on_Ex1**, copy the **data** folder to C:/zhuyiting1/ISSS624/Hands-on_Ex2. It should be in the same folder as Hands-on_Ex2.qmd.

## Importing Shapefile Data

In addition to **tidyverse** (which includes **dplyr**) and **sf** packages that we used earlier, we will need the **spdep** package for this exercise. We do it by including it in the *p_load()* function. As it requires the **spData** package, we will install and load it as well. Finally, we need the **tmap** package for quick plots.

```{r}
pacman::p_load(spData, tidyverse, sf, spdep, tmap)
```

Now we want to import the Hunan shapefile into R.

```{r}
hunan <- st_read(dsn = "data/geospatial",
                layer = "Hunan")
```

We can see that the data is in geodetic CRS **wgs84**.

## Importing Attribute Data in CSV

### Aspatial Hunan Data

The code chunk below imports the aspatial Hunan 2012 data.

```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

## Joining Hunan Data

The code chunk below joins the spatial and aspatial data for Hunan using the [*left_join()*](https://dplyr.tidyverse.org/reference/mutate-joins.html) function of the **dplyr** package.

```{r}
hunan <- left_join(hunan, hunan2012)
```

R recognises the variable "County" to be the only common variable between the two dataframes and performs the join accordingly. As the two dataframes have the exact same number of observations with matching county, *left_join()* here works the same as a *inner_join()*, *right_join()* and *full_join()*. It appends the `hunan2012` data to the right of the original `hunan` data. Notably, the geometry column from the original `hunan` dataframe remains at the rightmost column of the new `hunan` dataframe.

## Visualising Regional Development Indicator

With some data about the Hunan province, we want to create a quick thematic map to visualise the distribution of Gross Domestic Product Per Capita (GDPPC) in 2012, using the [*qtm()*](https://www.rdocumentation.org/packages/tmap/versions/3.3-3/topics/qtm) function from the **tmap** package.

```{r}
equal <- tm_shape(hunan) +
  tm_fill("GDPPC",
          n = 5,
          style = "equal") +
  tm_borders(alpha = 0.5) +
  tm_layout(main.title = "Equal interval classification",
            main.title.size = 1,
            main.title.position = "center",
            legend.height = 0.3, 
            legend.width = 0.7)
  
quantile <- tmap::tm_shape(hunan) +
  tm_fill("GDPPC",
          n = 5,
          style = "quantile") +
  tm_borders(alpha = 0.5) +
  tm_layout(main.title = "Equal quantile classification",
            main.title.size = 1,
            main.title.position = "center",
            legend.height = 0.3, 
            legend.width = 0.7)

tmap_arrange(equal, quantile, asp = 1, ncol = 2)
```

We see that the equal interval classification map shows that most regions (\~60%) have GDPPC of only 1/5 of the wealthiest region. In addition, we observe that the wealth is mostly concentrated in the Northeast region of the Hunan province.

## Global Spatial Autocorrelation

We want to know whether such a distribution of GDPPC is by pure chance (randomness), and if not, whether there is a positive/negative correlation between neighbouring regions or outliers. To do this, we will compute the global spatial autocorrelation statistics and perform spatial complete randomness test for global spatial autocorrelation.

### Contiguity Spatial Weights
